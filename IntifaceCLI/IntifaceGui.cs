// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: intiface-cli-csharp/IntifaceCLI/IntifaceGui.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace IntifaceCLI {

  /// <summary>Holder for reflection information generated from intiface-cli-csharp/IntifaceCLI/IntifaceGui.proto</summary>
  public static partial class IntifaceGuiReflection {

    #region Descriptor
    /// <summary>File descriptor for intiface-cli-csharp/IntifaceCLI/IntifaceGui.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static IntifaceGuiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFpbnRpZmFjZS1jbGktY3NoYXJwL0ludGlmYWNlQ0xJL0ludGlmYWNlR3Vp",
            "LnByb3RvEhNJbnRpZmFjZUd1aVByb3RvY29sIpIBChJEZXZpY2VNZXNzYWdl",
            "QXR0cnMSSgoKbXNnc19hdHRycxgBIAMoCzI2LkludGlmYWNlR3VpUHJvdG9j",
            "b2wuRGV2aWNlTWVzc2FnZUF0dHJzLk1zZ3NBdHRyc0VudHJ5GjAKDk1zZ3NB",
            "dHRyc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEi+gUK",
            "FFNlcnZlckNvbnRyb2xNZXNzYWdlEj4KBHN0b3AYASABKAsyLi5JbnRpZmFj",
            "ZUd1aVByb3RvY29sLlNlcnZlckNvbnRyb2xNZXNzYWdlLlN0b3BIABJcChRh",
            "ZGRfc2ltdWxhdGVkX2RldmljZRgCIAEoCzI8LkludGlmYWNlR3VpUHJvdG9j",
            "b2wuU2VydmVyQ29udHJvbE1lc3NhZ2UuQWRkU2ltdWxhdGVkRGV2aWNlSAAS",
            "YgoXcmVtb3ZlX3NpbXVsYXRlZF9kZXZpY2UYAyABKAsyPy5JbnRpZmFjZUd1",
            "aVByb3RvY29sLlNlcnZlckNvbnRyb2xNZXNzYWdlLlJlbW92ZVNpbXVsYXRl",
            "ZERldmljZUgAEmEKF3NpbXVsYXRlZF9kZXZpY2VfbXNnX2luGAQgASgLMj4u",
            "SW50aWZhY2VHdWlQcm90b2NvbC5TZXJ2ZXJDb250cm9sTWVzc2FnZS5TaW11",
            "bGF0ZWREZXZpY2VNc2dJbkgAGgYKBFN0b3Aa/gEKEkFkZFNpbXVsYXRlZERl",
            "dmljZRIUCgxkZXZpY2VfaWRlbnQYASABKAkSEwoLZGV2aWNlX25hbWUYAiAB",
            "KAkSYQoLZGV2aWNlX21zZ3MYAyADKAsyTC5JbnRpZmFjZUd1aVByb3RvY29s",
            "LlNlcnZlckNvbnRyb2xNZXNzYWdlLkFkZFNpbXVsYXRlZERldmljZS5EZXZp",
            "Y2VNc2dzRW50cnkaWgoPRGV2aWNlTXNnc0VudHJ5EgsKA2tleRgBIAEoCRI2",
            "CgV2YWx1ZRgCIAEoCzInLkludGlmYWNlR3VpUHJvdG9jb2wuRGV2aWNlTWVz",
            "c2FnZUF0dHJzOgI4ARotChVSZW1vdmVTaW11bGF0ZWREZXZpY2USFAoMZGV2",
            "aWNlX2lkZW50GAEgASgJGj4KFFNpbXVsYXRlZERldmljZU1zZ0luEhQKDGRl",
            "dmljZV9pZGVudBgBIAEoCRIQCghqc29uX21zZxgCIAEoCUIFCgNtc2ci4gkK",
            "FFNlcnZlclByb2Nlc3NNZXNzYWdlElMKD3Byb2Nlc3Nfc3RhcnRlZBgBIAEo",
            "CzI4LkludGlmYWNlR3VpUHJvdG9jb2wuU2VydmVyUHJvY2Vzc01lc3NhZ2Uu",
            "UHJvY2Vzc1N0YXJ0ZWRIABJPCg1wcm9jZXNzX2Vycm9yGAIgASgLMjYuSW50",
            "aWZhY2VHdWlQcm90b2NvbC5TZXJ2ZXJQcm9jZXNzTWVzc2FnZS5Qcm9jZXNz",
            "RXJyb3JIABJPCg1wcm9jZXNzX2VuZGVkGAMgASgLMjYuSW50aWZhY2VHdWlQ",
            "cm90b2NvbC5TZXJ2ZXJQcm9jZXNzTWVzc2FnZS5Qcm9jZXNzRW5kZWRIABJL",
            "Cgtwcm9jZXNzX2xvZxgEIAEoCzI0LkludGlmYWNlR3VpUHJvdG9jb2wuU2Vy",
            "dmVyUHJvY2Vzc01lc3NhZ2UuUHJvY2Vzc0xvZ0gAEk0KDGJ1dHRwbHVnX2xv",
            "ZxgFIAEoCzI1LkludGlmYWNlR3VpUHJvdG9jb2wuU2VydmVyUHJvY2Vzc01l",
            "c3NhZ2UuQnV0dHBsdWdMb2dIABJVChBjbGllbnRfY29ubmVjdGVkGAYgASgL",
            "MjkuSW50aWZhY2VHdWlQcm90b2NvbC5TZXJ2ZXJQcm9jZXNzTWVzc2FnZS5D",
            "bGllbnRDb25uZWN0ZWRIABJbChNjbGllbnRfZGlzY29ubmVjdGVkGAcgASgL",
            "MjwuSW50aWZhY2VHdWlQcm90b2NvbC5TZXJ2ZXJQcm9jZXNzTWVzc2FnZS5D",
            "bGllbnREaXNjb25uZWN0ZWRIABJVChBkZXZpY2VfY29ubmVjdGVkGAggASgL",
            "MjkuSW50aWZhY2VHdWlQcm90b2NvbC5TZXJ2ZXJQcm9jZXNzTWVzc2FnZS5E",
            "ZXZpY2VDb25uZWN0ZWRIABJbChNkZXZpY2VfZGlzY29ubmVjdGVkGAkgASgL",
            "MjwuSW50aWZhY2VHdWlQcm90b2NvbC5TZXJ2ZXJQcm9jZXNzTWVzc2FnZS5E",
            "ZXZpY2VEaXNjb25uZWN0ZWRIABJjChhzaW11bGF0ZWRfZGV2aWNlX21zZ19v",
            "dXQYCiABKAsyPy5JbnRpZmFjZUd1aVByb3RvY29sLlNlcnZlclByb2Nlc3NN",
            "ZXNzYWdlLlNpbXVsYXRlZERldmljZU1zZ091dEgAGh0KClByb2Nlc3NMb2cS",
            "DwoHbWVzc2FnZRgBIAEoCRoQCg5Qcm9jZXNzU3RhcnRlZBofCgxQcm9jZXNz",
            "RXJyb3ISDwoHbWVzc2FnZRgBIAEoCRoOCgxQcm9jZXNzRW5kZWQaHgoLQnV0",
            "dHBsdWdMb2cSDwoHbWVzc2FnZRgBIAEoCRomCg9DbGllbnRDb25uZWN0ZWQS",
            "EwoLY2xpZW50X25hbWUYASABKAkaFAoSQ2xpZW50RGlzY29ubmVjdGVkGjkK",
            "D0RldmljZUNvbm5lY3RlZBITCgtkZXZpY2VfbmFtZRgBIAEoCRIRCglkZXZp",
            "Y2VfaWQYAiABKA0aJwoSRGV2aWNlRGlzY29ubmVjdGVkEhEKCWRldmljZV9p",
            "ZBgBIAEoDRo/ChVTaW11bGF0ZWREZXZpY2VNc2dPdXQSFAoMZGV2aWNlX2lk",
            "ZW50GAEgASgJEhAKCGpzb25fbXNnGAIgASgJQgUKA21zZ0IOqgILSW50aWZh",
            "Y2VDTEliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.DeviceMessageAttrs), global::IntifaceCLI.DeviceMessageAttrs.Parser, new[]{ "MsgsAttrs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.ServerControlMessage), global::IntifaceCLI.ServerControlMessage.Parser, new[]{ "Stop", "AddSimulatedDevice", "RemoveSimulatedDevice", "SimulatedDeviceMsgIn" }, new[]{ "Msg" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.ServerControlMessage.Types.Stop), global::IntifaceCLI.ServerControlMessage.Types.Stop.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.ServerControlMessage.Types.AddSimulatedDevice), global::IntifaceCLI.ServerControlMessage.Types.AddSimulatedDevice.Parser, new[]{ "DeviceIdent", "DeviceName", "DeviceMsgs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.ServerControlMessage.Types.RemoveSimulatedDevice), global::IntifaceCLI.ServerControlMessage.Types.RemoveSimulatedDevice.Parser, new[]{ "DeviceIdent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.ServerControlMessage.Types.SimulatedDeviceMsgIn), global::IntifaceCLI.ServerControlMessage.Types.SimulatedDeviceMsgIn.Parser, new[]{ "DeviceIdent", "JsonMsg" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.ServerProcessMessage), global::IntifaceCLI.ServerProcessMessage.Parser, new[]{ "ProcessStarted", "ProcessError", "ProcessEnded", "ProcessLog", "ButtplugLog", "ClientConnected", "ClientDisconnected", "DeviceConnected", "DeviceDisconnected", "SimulatedDeviceMsgOut" }, new[]{ "Msg" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.ServerProcessMessage.Types.ProcessLog), global::IntifaceCLI.ServerProcessMessage.Types.ProcessLog.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.ServerProcessMessage.Types.ProcessStarted), global::IntifaceCLI.ServerProcessMessage.Types.ProcessStarted.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.ServerProcessMessage.Types.ProcessError), global::IntifaceCLI.ServerProcessMessage.Types.ProcessError.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.ServerProcessMessage.Types.ProcessEnded), global::IntifaceCLI.ServerProcessMessage.Types.ProcessEnded.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.ServerProcessMessage.Types.ButtplugLog), global::IntifaceCLI.ServerProcessMessage.Types.ButtplugLog.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.ServerProcessMessage.Types.ClientConnected), global::IntifaceCLI.ServerProcessMessage.Types.ClientConnected.Parser, new[]{ "ClientName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.ServerProcessMessage.Types.ClientDisconnected), global::IntifaceCLI.ServerProcessMessage.Types.ClientDisconnected.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.ServerProcessMessage.Types.DeviceConnected), global::IntifaceCLI.ServerProcessMessage.Types.DeviceConnected.Parser, new[]{ "DeviceName", "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.ServerProcessMessage.Types.DeviceDisconnected), global::IntifaceCLI.ServerProcessMessage.Types.DeviceDisconnected.Parser, new[]{ "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntifaceCLI.ServerProcessMessage.Types.SimulatedDeviceMsgOut), global::IntifaceCLI.ServerProcessMessage.Types.SimulatedDeviceMsgOut.Parser, new[]{ "DeviceIdent", "JsonMsg" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DeviceMessageAttrs : pb::IMessage<DeviceMessageAttrs> {
    private static readonly pb::MessageParser<DeviceMessageAttrs> _parser = new pb::MessageParser<DeviceMessageAttrs>(() => new DeviceMessageAttrs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceMessageAttrs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IntifaceCLI.IntifaceGuiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceMessageAttrs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceMessageAttrs(DeviceMessageAttrs other) : this() {
      msgsAttrs_ = other.msgsAttrs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceMessageAttrs Clone() {
      return new DeviceMessageAttrs(this);
    }

    /// <summary>Field number for the "msgs_attrs" field.</summary>
    public const int MsgsAttrsFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_msgsAttrs_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> msgsAttrs_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> MsgsAttrs {
      get { return msgsAttrs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceMessageAttrs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceMessageAttrs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MsgsAttrs.Equals(other.MsgsAttrs)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MsgsAttrs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      msgsAttrs_.WriteTo(output, _map_msgsAttrs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += msgsAttrs_.CalculateSize(_map_msgsAttrs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceMessageAttrs other) {
      if (other == null) {
        return;
      }
      msgsAttrs_.Add(other.msgsAttrs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            msgsAttrs_.AddEntriesFrom(input, _map_msgsAttrs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerControlMessage : pb::IMessage<ServerControlMessage> {
    private static readonly pb::MessageParser<ServerControlMessage> _parser = new pb::MessageParser<ServerControlMessage>(() => new ServerControlMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerControlMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IntifaceCLI.IntifaceGuiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerControlMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerControlMessage(ServerControlMessage other) : this() {
      switch (other.MsgCase) {
        case MsgOneofCase.Stop:
          Stop = other.Stop.Clone();
          break;
        case MsgOneofCase.AddSimulatedDevice:
          AddSimulatedDevice = other.AddSimulatedDevice.Clone();
          break;
        case MsgOneofCase.RemoveSimulatedDevice:
          RemoveSimulatedDevice = other.RemoveSimulatedDevice.Clone();
          break;
        case MsgOneofCase.SimulatedDeviceMsgIn:
          SimulatedDeviceMsgIn = other.SimulatedDeviceMsgIn.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerControlMessage Clone() {
      return new ServerControlMessage(this);
    }

    /// <summary>Field number for the "stop" field.</summary>
    public const int StopFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IntifaceCLI.ServerControlMessage.Types.Stop Stop {
      get { return msgCase_ == MsgOneofCase.Stop ? (global::IntifaceCLI.ServerControlMessage.Types.Stop) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Stop;
      }
    }

    /// <summary>Field number for the "add_simulated_device" field.</summary>
    public const int AddSimulatedDeviceFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IntifaceCLI.ServerControlMessage.Types.AddSimulatedDevice AddSimulatedDevice {
      get { return msgCase_ == MsgOneofCase.AddSimulatedDevice ? (global::IntifaceCLI.ServerControlMessage.Types.AddSimulatedDevice) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.AddSimulatedDevice;
      }
    }

    /// <summary>Field number for the "remove_simulated_device" field.</summary>
    public const int RemoveSimulatedDeviceFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IntifaceCLI.ServerControlMessage.Types.RemoveSimulatedDevice RemoveSimulatedDevice {
      get { return msgCase_ == MsgOneofCase.RemoveSimulatedDevice ? (global::IntifaceCLI.ServerControlMessage.Types.RemoveSimulatedDevice) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.RemoveSimulatedDevice;
      }
    }

    /// <summary>Field number for the "simulated_device_msg_in" field.</summary>
    public const int SimulatedDeviceMsgInFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IntifaceCLI.ServerControlMessage.Types.SimulatedDeviceMsgIn SimulatedDeviceMsgIn {
      get { return msgCase_ == MsgOneofCase.SimulatedDeviceMsgIn ? (global::IntifaceCLI.ServerControlMessage.Types.SimulatedDeviceMsgIn) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.SimulatedDeviceMsgIn;
      }
    }

    private object msg_;
    /// <summary>Enum of possible cases for the "msg" oneof.</summary>
    public enum MsgOneofCase {
      None = 0,
      Stop = 1,
      AddSimulatedDevice = 2,
      RemoveSimulatedDevice = 3,
      SimulatedDeviceMsgIn = 4,
    }
    private MsgOneofCase msgCase_ = MsgOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgOneofCase MsgCase {
      get { return msgCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMsg() {
      msgCase_ = MsgOneofCase.None;
      msg_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerControlMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerControlMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Stop, other.Stop)) return false;
      if (!object.Equals(AddSimulatedDevice, other.AddSimulatedDevice)) return false;
      if (!object.Equals(RemoveSimulatedDevice, other.RemoveSimulatedDevice)) return false;
      if (!object.Equals(SimulatedDeviceMsgIn, other.SimulatedDeviceMsgIn)) return false;
      if (MsgCase != other.MsgCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (msgCase_ == MsgOneofCase.Stop) hash ^= Stop.GetHashCode();
      if (msgCase_ == MsgOneofCase.AddSimulatedDevice) hash ^= AddSimulatedDevice.GetHashCode();
      if (msgCase_ == MsgOneofCase.RemoveSimulatedDevice) hash ^= RemoveSimulatedDevice.GetHashCode();
      if (msgCase_ == MsgOneofCase.SimulatedDeviceMsgIn) hash ^= SimulatedDeviceMsgIn.GetHashCode();
      hash ^= (int) msgCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (msgCase_ == MsgOneofCase.Stop) {
        output.WriteRawTag(10);
        output.WriteMessage(Stop);
      }
      if (msgCase_ == MsgOneofCase.AddSimulatedDevice) {
        output.WriteRawTag(18);
        output.WriteMessage(AddSimulatedDevice);
      }
      if (msgCase_ == MsgOneofCase.RemoveSimulatedDevice) {
        output.WriteRawTag(26);
        output.WriteMessage(RemoveSimulatedDevice);
      }
      if (msgCase_ == MsgOneofCase.SimulatedDeviceMsgIn) {
        output.WriteRawTag(34);
        output.WriteMessage(SimulatedDeviceMsgIn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (msgCase_ == MsgOneofCase.Stop) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stop);
      }
      if (msgCase_ == MsgOneofCase.AddSimulatedDevice) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddSimulatedDevice);
      }
      if (msgCase_ == MsgOneofCase.RemoveSimulatedDevice) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoveSimulatedDevice);
      }
      if (msgCase_ == MsgOneofCase.SimulatedDeviceMsgIn) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SimulatedDeviceMsgIn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerControlMessage other) {
      if (other == null) {
        return;
      }
      switch (other.MsgCase) {
        case MsgOneofCase.Stop:
          if (Stop == null) {
            Stop = new global::IntifaceCLI.ServerControlMessage.Types.Stop();
          }
          Stop.MergeFrom(other.Stop);
          break;
        case MsgOneofCase.AddSimulatedDevice:
          if (AddSimulatedDevice == null) {
            AddSimulatedDevice = new global::IntifaceCLI.ServerControlMessage.Types.AddSimulatedDevice();
          }
          AddSimulatedDevice.MergeFrom(other.AddSimulatedDevice);
          break;
        case MsgOneofCase.RemoveSimulatedDevice:
          if (RemoveSimulatedDevice == null) {
            RemoveSimulatedDevice = new global::IntifaceCLI.ServerControlMessage.Types.RemoveSimulatedDevice();
          }
          RemoveSimulatedDevice.MergeFrom(other.RemoveSimulatedDevice);
          break;
        case MsgOneofCase.SimulatedDeviceMsgIn:
          if (SimulatedDeviceMsgIn == null) {
            SimulatedDeviceMsgIn = new global::IntifaceCLI.ServerControlMessage.Types.SimulatedDeviceMsgIn();
          }
          SimulatedDeviceMsgIn.MergeFrom(other.SimulatedDeviceMsgIn);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::IntifaceCLI.ServerControlMessage.Types.Stop subBuilder = new global::IntifaceCLI.ServerControlMessage.Types.Stop();
            if (msgCase_ == MsgOneofCase.Stop) {
              subBuilder.MergeFrom(Stop);
            }
            input.ReadMessage(subBuilder);
            Stop = subBuilder;
            break;
          }
          case 18: {
            global::IntifaceCLI.ServerControlMessage.Types.AddSimulatedDevice subBuilder = new global::IntifaceCLI.ServerControlMessage.Types.AddSimulatedDevice();
            if (msgCase_ == MsgOneofCase.AddSimulatedDevice) {
              subBuilder.MergeFrom(AddSimulatedDevice);
            }
            input.ReadMessage(subBuilder);
            AddSimulatedDevice = subBuilder;
            break;
          }
          case 26: {
            global::IntifaceCLI.ServerControlMessage.Types.RemoveSimulatedDevice subBuilder = new global::IntifaceCLI.ServerControlMessage.Types.RemoveSimulatedDevice();
            if (msgCase_ == MsgOneofCase.RemoveSimulatedDevice) {
              subBuilder.MergeFrom(RemoveSimulatedDevice);
            }
            input.ReadMessage(subBuilder);
            RemoveSimulatedDevice = subBuilder;
            break;
          }
          case 34: {
            global::IntifaceCLI.ServerControlMessage.Types.SimulatedDeviceMsgIn subBuilder = new global::IntifaceCLI.ServerControlMessage.Types.SimulatedDeviceMsgIn();
            if (msgCase_ == MsgOneofCase.SimulatedDeviceMsgIn) {
              subBuilder.MergeFrom(SimulatedDeviceMsgIn);
            }
            input.ReadMessage(subBuilder);
            SimulatedDeviceMsgIn = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ServerControlMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Stop : pb::IMessage<Stop> {
        private static readonly pb::MessageParser<Stop> _parser = new pb::MessageParser<Stop>(() => new Stop());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Stop> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::IntifaceCLI.ServerControlMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Stop() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Stop(Stop other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Stop Clone() {
          return new Stop(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Stop);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Stop other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Stop other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class AddSimulatedDevice : pb::IMessage<AddSimulatedDevice> {
        private static readonly pb::MessageParser<AddSimulatedDevice> _parser = new pb::MessageParser<AddSimulatedDevice>(() => new AddSimulatedDevice());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AddSimulatedDevice> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::IntifaceCLI.ServerControlMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AddSimulatedDevice() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AddSimulatedDevice(AddSimulatedDevice other) : this() {
          deviceIdent_ = other.deviceIdent_;
          deviceName_ = other.deviceName_;
          deviceMsgs_ = other.deviceMsgs_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AddSimulatedDevice Clone() {
          return new AddSimulatedDevice(this);
        }

        /// <summary>Field number for the "device_ident" field.</summary>
        public const int DeviceIdentFieldNumber = 1;
        private string deviceIdent_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeviceIdent {
          get { return deviceIdent_; }
          set {
            deviceIdent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "device_name" field.</summary>
        public const int DeviceNameFieldNumber = 2;
        private string deviceName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeviceName {
          get { return deviceName_; }
          set {
            deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "device_msgs" field.</summary>
        public const int DeviceMsgsFieldNumber = 3;
        private static readonly pbc::MapField<string, global::IntifaceCLI.DeviceMessageAttrs>.Codec _map_deviceMsgs_codec
            = new pbc::MapField<string, global::IntifaceCLI.DeviceMessageAttrs>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::IntifaceCLI.DeviceMessageAttrs.Parser), 26);
        private readonly pbc::MapField<string, global::IntifaceCLI.DeviceMessageAttrs> deviceMsgs_ = new pbc::MapField<string, global::IntifaceCLI.DeviceMessageAttrs>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::IntifaceCLI.DeviceMessageAttrs> DeviceMsgs {
          get { return deviceMsgs_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AddSimulatedDevice);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AddSimulatedDevice other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DeviceIdent != other.DeviceIdent) return false;
          if (DeviceName != other.DeviceName) return false;
          if (!DeviceMsgs.Equals(other.DeviceMsgs)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DeviceIdent.Length != 0) hash ^= DeviceIdent.GetHashCode();
          if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
          hash ^= DeviceMsgs.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (DeviceIdent.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DeviceIdent);
          }
          if (DeviceName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(DeviceName);
          }
          deviceMsgs_.WriteTo(output, _map_deviceMsgs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DeviceIdent.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceIdent);
          }
          if (DeviceName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
          }
          size += deviceMsgs_.CalculateSize(_map_deviceMsgs_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AddSimulatedDevice other) {
          if (other == null) {
            return;
          }
          if (other.DeviceIdent.Length != 0) {
            DeviceIdent = other.DeviceIdent;
          }
          if (other.DeviceName.Length != 0) {
            DeviceName = other.DeviceName;
          }
          deviceMsgs_.Add(other.deviceMsgs_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DeviceIdent = input.ReadString();
                break;
              }
              case 18: {
                DeviceName = input.ReadString();
                break;
              }
              case 26: {
                deviceMsgs_.AddEntriesFrom(input, _map_deviceMsgs_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class RemoveSimulatedDevice : pb::IMessage<RemoveSimulatedDevice> {
        private static readonly pb::MessageParser<RemoveSimulatedDevice> _parser = new pb::MessageParser<RemoveSimulatedDevice>(() => new RemoveSimulatedDevice());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RemoveSimulatedDevice> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::IntifaceCLI.ServerControlMessage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemoveSimulatedDevice() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemoveSimulatedDevice(RemoveSimulatedDevice other) : this() {
          deviceIdent_ = other.deviceIdent_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RemoveSimulatedDevice Clone() {
          return new RemoveSimulatedDevice(this);
        }

        /// <summary>Field number for the "device_ident" field.</summary>
        public const int DeviceIdentFieldNumber = 1;
        private string deviceIdent_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeviceIdent {
          get { return deviceIdent_; }
          set {
            deviceIdent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RemoveSimulatedDevice);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RemoveSimulatedDevice other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DeviceIdent != other.DeviceIdent) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DeviceIdent.Length != 0) hash ^= DeviceIdent.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (DeviceIdent.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DeviceIdent);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DeviceIdent.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceIdent);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RemoveSimulatedDevice other) {
          if (other == null) {
            return;
          }
          if (other.DeviceIdent.Length != 0) {
            DeviceIdent = other.DeviceIdent;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DeviceIdent = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class SimulatedDeviceMsgIn : pb::IMessage<SimulatedDeviceMsgIn> {
        private static readonly pb::MessageParser<SimulatedDeviceMsgIn> _parser = new pb::MessageParser<SimulatedDeviceMsgIn>(() => new SimulatedDeviceMsgIn());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SimulatedDeviceMsgIn> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::IntifaceCLI.ServerControlMessage.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SimulatedDeviceMsgIn() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SimulatedDeviceMsgIn(SimulatedDeviceMsgIn other) : this() {
          deviceIdent_ = other.deviceIdent_;
          jsonMsg_ = other.jsonMsg_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SimulatedDeviceMsgIn Clone() {
          return new SimulatedDeviceMsgIn(this);
        }

        /// <summary>Field number for the "device_ident" field.</summary>
        public const int DeviceIdentFieldNumber = 1;
        private string deviceIdent_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeviceIdent {
          get { return deviceIdent_; }
          set {
            deviceIdent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "json_msg" field.</summary>
        public const int JsonMsgFieldNumber = 2;
        private string jsonMsg_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string JsonMsg {
          get { return jsonMsg_; }
          set {
            jsonMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SimulatedDeviceMsgIn);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SimulatedDeviceMsgIn other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DeviceIdent != other.DeviceIdent) return false;
          if (JsonMsg != other.JsonMsg) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DeviceIdent.Length != 0) hash ^= DeviceIdent.GetHashCode();
          if (JsonMsg.Length != 0) hash ^= JsonMsg.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (DeviceIdent.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DeviceIdent);
          }
          if (JsonMsg.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(JsonMsg);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DeviceIdent.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceIdent);
          }
          if (JsonMsg.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonMsg);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SimulatedDeviceMsgIn other) {
          if (other == null) {
            return;
          }
          if (other.DeviceIdent.Length != 0) {
            DeviceIdent = other.DeviceIdent;
          }
          if (other.JsonMsg.Length != 0) {
            JsonMsg = other.JsonMsg;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DeviceIdent = input.ReadString();
                break;
              }
              case 18: {
                JsonMsg = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// This needs to stay in sync with the Intiface protocols.
  /// </summary>
  public sealed partial class ServerProcessMessage : pb::IMessage<ServerProcessMessage> {
    private static readonly pb::MessageParser<ServerProcessMessage> _parser = new pb::MessageParser<ServerProcessMessage>(() => new ServerProcessMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerProcessMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IntifaceCLI.IntifaceGuiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerProcessMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerProcessMessage(ServerProcessMessage other) : this() {
      switch (other.MsgCase) {
        case MsgOneofCase.ProcessStarted:
          ProcessStarted = other.ProcessStarted.Clone();
          break;
        case MsgOneofCase.ProcessError:
          ProcessError = other.ProcessError.Clone();
          break;
        case MsgOneofCase.ProcessEnded:
          ProcessEnded = other.ProcessEnded.Clone();
          break;
        case MsgOneofCase.ProcessLog:
          ProcessLog = other.ProcessLog.Clone();
          break;
        case MsgOneofCase.ButtplugLog:
          ButtplugLog = other.ButtplugLog.Clone();
          break;
        case MsgOneofCase.ClientConnected:
          ClientConnected = other.ClientConnected.Clone();
          break;
        case MsgOneofCase.ClientDisconnected:
          ClientDisconnected = other.ClientDisconnected.Clone();
          break;
        case MsgOneofCase.DeviceConnected:
          DeviceConnected = other.DeviceConnected.Clone();
          break;
        case MsgOneofCase.DeviceDisconnected:
          DeviceDisconnected = other.DeviceDisconnected.Clone();
          break;
        case MsgOneofCase.SimulatedDeviceMsgOut:
          SimulatedDeviceMsgOut = other.SimulatedDeviceMsgOut.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerProcessMessage Clone() {
      return new ServerProcessMessage(this);
    }

    /// <summary>Field number for the "process_started" field.</summary>
    public const int ProcessStartedFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IntifaceCLI.ServerProcessMessage.Types.ProcessStarted ProcessStarted {
      get { return msgCase_ == MsgOneofCase.ProcessStarted ? (global::IntifaceCLI.ServerProcessMessage.Types.ProcessStarted) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.ProcessStarted;
      }
    }

    /// <summary>Field number for the "process_error" field.</summary>
    public const int ProcessErrorFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IntifaceCLI.ServerProcessMessage.Types.ProcessError ProcessError {
      get { return msgCase_ == MsgOneofCase.ProcessError ? (global::IntifaceCLI.ServerProcessMessage.Types.ProcessError) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.ProcessError;
      }
    }

    /// <summary>Field number for the "process_ended" field.</summary>
    public const int ProcessEndedFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IntifaceCLI.ServerProcessMessage.Types.ProcessEnded ProcessEnded {
      get { return msgCase_ == MsgOneofCase.ProcessEnded ? (global::IntifaceCLI.ServerProcessMessage.Types.ProcessEnded) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.ProcessEnded;
      }
    }

    /// <summary>Field number for the "process_log" field.</summary>
    public const int ProcessLogFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IntifaceCLI.ServerProcessMessage.Types.ProcessLog ProcessLog {
      get { return msgCase_ == MsgOneofCase.ProcessLog ? (global::IntifaceCLI.ServerProcessMessage.Types.ProcessLog) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.ProcessLog;
      }
    }

    /// <summary>Field number for the "buttplug_log" field.</summary>
    public const int ButtplugLogFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IntifaceCLI.ServerProcessMessage.Types.ButtplugLog ButtplugLog {
      get { return msgCase_ == MsgOneofCase.ButtplugLog ? (global::IntifaceCLI.ServerProcessMessage.Types.ButtplugLog) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.ButtplugLog;
      }
    }

    /// <summary>Field number for the "client_connected" field.</summary>
    public const int ClientConnectedFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IntifaceCLI.ServerProcessMessage.Types.ClientConnected ClientConnected {
      get { return msgCase_ == MsgOneofCase.ClientConnected ? (global::IntifaceCLI.ServerProcessMessage.Types.ClientConnected) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.ClientConnected;
      }
    }

    /// <summary>Field number for the "client_disconnected" field.</summary>
    public const int ClientDisconnectedFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IntifaceCLI.ServerProcessMessage.Types.ClientDisconnected ClientDisconnected {
      get { return msgCase_ == MsgOneofCase.ClientDisconnected ? (global::IntifaceCLI.ServerProcessMessage.Types.ClientDisconnected) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.ClientDisconnected;
      }
    }

    /// <summary>Field number for the "device_connected" field.</summary>
    public const int DeviceConnectedFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IntifaceCLI.ServerProcessMessage.Types.DeviceConnected DeviceConnected {
      get { return msgCase_ == MsgOneofCase.DeviceConnected ? (global::IntifaceCLI.ServerProcessMessage.Types.DeviceConnected) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.DeviceConnected;
      }
    }

    /// <summary>Field number for the "device_disconnected" field.</summary>
    public const int DeviceDisconnectedFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IntifaceCLI.ServerProcessMessage.Types.DeviceDisconnected DeviceDisconnected {
      get { return msgCase_ == MsgOneofCase.DeviceDisconnected ? (global::IntifaceCLI.ServerProcessMessage.Types.DeviceDisconnected) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.DeviceDisconnected;
      }
    }

    /// <summary>Field number for the "simulated_device_msg_out" field.</summary>
    public const int SimulatedDeviceMsgOutFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::IntifaceCLI.ServerProcessMessage.Types.SimulatedDeviceMsgOut SimulatedDeviceMsgOut {
      get { return msgCase_ == MsgOneofCase.SimulatedDeviceMsgOut ? (global::IntifaceCLI.ServerProcessMessage.Types.SimulatedDeviceMsgOut) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.SimulatedDeviceMsgOut;
      }
    }

    private object msg_;
    /// <summary>Enum of possible cases for the "msg" oneof.</summary>
    public enum MsgOneofCase {
      None = 0,
      ProcessStarted = 1,
      ProcessError = 2,
      ProcessEnded = 3,
      ProcessLog = 4,
      ButtplugLog = 5,
      ClientConnected = 6,
      ClientDisconnected = 7,
      DeviceConnected = 8,
      DeviceDisconnected = 9,
      SimulatedDeviceMsgOut = 10,
    }
    private MsgOneofCase msgCase_ = MsgOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgOneofCase MsgCase {
      get { return msgCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMsg() {
      msgCase_ = MsgOneofCase.None;
      msg_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerProcessMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerProcessMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ProcessStarted, other.ProcessStarted)) return false;
      if (!object.Equals(ProcessError, other.ProcessError)) return false;
      if (!object.Equals(ProcessEnded, other.ProcessEnded)) return false;
      if (!object.Equals(ProcessLog, other.ProcessLog)) return false;
      if (!object.Equals(ButtplugLog, other.ButtplugLog)) return false;
      if (!object.Equals(ClientConnected, other.ClientConnected)) return false;
      if (!object.Equals(ClientDisconnected, other.ClientDisconnected)) return false;
      if (!object.Equals(DeviceConnected, other.DeviceConnected)) return false;
      if (!object.Equals(DeviceDisconnected, other.DeviceDisconnected)) return false;
      if (!object.Equals(SimulatedDeviceMsgOut, other.SimulatedDeviceMsgOut)) return false;
      if (MsgCase != other.MsgCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (msgCase_ == MsgOneofCase.ProcessStarted) hash ^= ProcessStarted.GetHashCode();
      if (msgCase_ == MsgOneofCase.ProcessError) hash ^= ProcessError.GetHashCode();
      if (msgCase_ == MsgOneofCase.ProcessEnded) hash ^= ProcessEnded.GetHashCode();
      if (msgCase_ == MsgOneofCase.ProcessLog) hash ^= ProcessLog.GetHashCode();
      if (msgCase_ == MsgOneofCase.ButtplugLog) hash ^= ButtplugLog.GetHashCode();
      if (msgCase_ == MsgOneofCase.ClientConnected) hash ^= ClientConnected.GetHashCode();
      if (msgCase_ == MsgOneofCase.ClientDisconnected) hash ^= ClientDisconnected.GetHashCode();
      if (msgCase_ == MsgOneofCase.DeviceConnected) hash ^= DeviceConnected.GetHashCode();
      if (msgCase_ == MsgOneofCase.DeviceDisconnected) hash ^= DeviceDisconnected.GetHashCode();
      if (msgCase_ == MsgOneofCase.SimulatedDeviceMsgOut) hash ^= SimulatedDeviceMsgOut.GetHashCode();
      hash ^= (int) msgCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (msgCase_ == MsgOneofCase.ProcessStarted) {
        output.WriteRawTag(10);
        output.WriteMessage(ProcessStarted);
      }
      if (msgCase_ == MsgOneofCase.ProcessError) {
        output.WriteRawTag(18);
        output.WriteMessage(ProcessError);
      }
      if (msgCase_ == MsgOneofCase.ProcessEnded) {
        output.WriteRawTag(26);
        output.WriteMessage(ProcessEnded);
      }
      if (msgCase_ == MsgOneofCase.ProcessLog) {
        output.WriteRawTag(34);
        output.WriteMessage(ProcessLog);
      }
      if (msgCase_ == MsgOneofCase.ButtplugLog) {
        output.WriteRawTag(42);
        output.WriteMessage(ButtplugLog);
      }
      if (msgCase_ == MsgOneofCase.ClientConnected) {
        output.WriteRawTag(50);
        output.WriteMessage(ClientConnected);
      }
      if (msgCase_ == MsgOneofCase.ClientDisconnected) {
        output.WriteRawTag(58);
        output.WriteMessage(ClientDisconnected);
      }
      if (msgCase_ == MsgOneofCase.DeviceConnected) {
        output.WriteRawTag(66);
        output.WriteMessage(DeviceConnected);
      }
      if (msgCase_ == MsgOneofCase.DeviceDisconnected) {
        output.WriteRawTag(74);
        output.WriteMessage(DeviceDisconnected);
      }
      if (msgCase_ == MsgOneofCase.SimulatedDeviceMsgOut) {
        output.WriteRawTag(82);
        output.WriteMessage(SimulatedDeviceMsgOut);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (msgCase_ == MsgOneofCase.ProcessStarted) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProcessStarted);
      }
      if (msgCase_ == MsgOneofCase.ProcessError) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProcessError);
      }
      if (msgCase_ == MsgOneofCase.ProcessEnded) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProcessEnded);
      }
      if (msgCase_ == MsgOneofCase.ProcessLog) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProcessLog);
      }
      if (msgCase_ == MsgOneofCase.ButtplugLog) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ButtplugLog);
      }
      if (msgCase_ == MsgOneofCase.ClientConnected) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientConnected);
      }
      if (msgCase_ == MsgOneofCase.ClientDisconnected) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientDisconnected);
      }
      if (msgCase_ == MsgOneofCase.DeviceConnected) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceConnected);
      }
      if (msgCase_ == MsgOneofCase.DeviceDisconnected) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceDisconnected);
      }
      if (msgCase_ == MsgOneofCase.SimulatedDeviceMsgOut) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SimulatedDeviceMsgOut);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerProcessMessage other) {
      if (other == null) {
        return;
      }
      switch (other.MsgCase) {
        case MsgOneofCase.ProcessStarted:
          if (ProcessStarted == null) {
            ProcessStarted = new global::IntifaceCLI.ServerProcessMessage.Types.ProcessStarted();
          }
          ProcessStarted.MergeFrom(other.ProcessStarted);
          break;
        case MsgOneofCase.ProcessError:
          if (ProcessError == null) {
            ProcessError = new global::IntifaceCLI.ServerProcessMessage.Types.ProcessError();
          }
          ProcessError.MergeFrom(other.ProcessError);
          break;
        case MsgOneofCase.ProcessEnded:
          if (ProcessEnded == null) {
            ProcessEnded = new global::IntifaceCLI.ServerProcessMessage.Types.ProcessEnded();
          }
          ProcessEnded.MergeFrom(other.ProcessEnded);
          break;
        case MsgOneofCase.ProcessLog:
          if (ProcessLog == null) {
            ProcessLog = new global::IntifaceCLI.ServerProcessMessage.Types.ProcessLog();
          }
          ProcessLog.MergeFrom(other.ProcessLog);
          break;
        case MsgOneofCase.ButtplugLog:
          if (ButtplugLog == null) {
            ButtplugLog = new global::IntifaceCLI.ServerProcessMessage.Types.ButtplugLog();
          }
          ButtplugLog.MergeFrom(other.ButtplugLog);
          break;
        case MsgOneofCase.ClientConnected:
          if (ClientConnected == null) {
            ClientConnected = new global::IntifaceCLI.ServerProcessMessage.Types.ClientConnected();
          }
          ClientConnected.MergeFrom(other.ClientConnected);
          break;
        case MsgOneofCase.ClientDisconnected:
          if (ClientDisconnected == null) {
            ClientDisconnected = new global::IntifaceCLI.ServerProcessMessage.Types.ClientDisconnected();
          }
          ClientDisconnected.MergeFrom(other.ClientDisconnected);
          break;
        case MsgOneofCase.DeviceConnected:
          if (DeviceConnected == null) {
            DeviceConnected = new global::IntifaceCLI.ServerProcessMessage.Types.DeviceConnected();
          }
          DeviceConnected.MergeFrom(other.DeviceConnected);
          break;
        case MsgOneofCase.DeviceDisconnected:
          if (DeviceDisconnected == null) {
            DeviceDisconnected = new global::IntifaceCLI.ServerProcessMessage.Types.DeviceDisconnected();
          }
          DeviceDisconnected.MergeFrom(other.DeviceDisconnected);
          break;
        case MsgOneofCase.SimulatedDeviceMsgOut:
          if (SimulatedDeviceMsgOut == null) {
            SimulatedDeviceMsgOut = new global::IntifaceCLI.ServerProcessMessage.Types.SimulatedDeviceMsgOut();
          }
          SimulatedDeviceMsgOut.MergeFrom(other.SimulatedDeviceMsgOut);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::IntifaceCLI.ServerProcessMessage.Types.ProcessStarted subBuilder = new global::IntifaceCLI.ServerProcessMessage.Types.ProcessStarted();
            if (msgCase_ == MsgOneofCase.ProcessStarted) {
              subBuilder.MergeFrom(ProcessStarted);
            }
            input.ReadMessage(subBuilder);
            ProcessStarted = subBuilder;
            break;
          }
          case 18: {
            global::IntifaceCLI.ServerProcessMessage.Types.ProcessError subBuilder = new global::IntifaceCLI.ServerProcessMessage.Types.ProcessError();
            if (msgCase_ == MsgOneofCase.ProcessError) {
              subBuilder.MergeFrom(ProcessError);
            }
            input.ReadMessage(subBuilder);
            ProcessError = subBuilder;
            break;
          }
          case 26: {
            global::IntifaceCLI.ServerProcessMessage.Types.ProcessEnded subBuilder = new global::IntifaceCLI.ServerProcessMessage.Types.ProcessEnded();
            if (msgCase_ == MsgOneofCase.ProcessEnded) {
              subBuilder.MergeFrom(ProcessEnded);
            }
            input.ReadMessage(subBuilder);
            ProcessEnded = subBuilder;
            break;
          }
          case 34: {
            global::IntifaceCLI.ServerProcessMessage.Types.ProcessLog subBuilder = new global::IntifaceCLI.ServerProcessMessage.Types.ProcessLog();
            if (msgCase_ == MsgOneofCase.ProcessLog) {
              subBuilder.MergeFrom(ProcessLog);
            }
            input.ReadMessage(subBuilder);
            ProcessLog = subBuilder;
            break;
          }
          case 42: {
            global::IntifaceCLI.ServerProcessMessage.Types.ButtplugLog subBuilder = new global::IntifaceCLI.ServerProcessMessage.Types.ButtplugLog();
            if (msgCase_ == MsgOneofCase.ButtplugLog) {
              subBuilder.MergeFrom(ButtplugLog);
            }
            input.ReadMessage(subBuilder);
            ButtplugLog = subBuilder;
            break;
          }
          case 50: {
            global::IntifaceCLI.ServerProcessMessage.Types.ClientConnected subBuilder = new global::IntifaceCLI.ServerProcessMessage.Types.ClientConnected();
            if (msgCase_ == MsgOneofCase.ClientConnected) {
              subBuilder.MergeFrom(ClientConnected);
            }
            input.ReadMessage(subBuilder);
            ClientConnected = subBuilder;
            break;
          }
          case 58: {
            global::IntifaceCLI.ServerProcessMessage.Types.ClientDisconnected subBuilder = new global::IntifaceCLI.ServerProcessMessage.Types.ClientDisconnected();
            if (msgCase_ == MsgOneofCase.ClientDisconnected) {
              subBuilder.MergeFrom(ClientDisconnected);
            }
            input.ReadMessage(subBuilder);
            ClientDisconnected = subBuilder;
            break;
          }
          case 66: {
            global::IntifaceCLI.ServerProcessMessage.Types.DeviceConnected subBuilder = new global::IntifaceCLI.ServerProcessMessage.Types.DeviceConnected();
            if (msgCase_ == MsgOneofCase.DeviceConnected) {
              subBuilder.MergeFrom(DeviceConnected);
            }
            input.ReadMessage(subBuilder);
            DeviceConnected = subBuilder;
            break;
          }
          case 74: {
            global::IntifaceCLI.ServerProcessMessage.Types.DeviceDisconnected subBuilder = new global::IntifaceCLI.ServerProcessMessage.Types.DeviceDisconnected();
            if (msgCase_ == MsgOneofCase.DeviceDisconnected) {
              subBuilder.MergeFrom(DeviceDisconnected);
            }
            input.ReadMessage(subBuilder);
            DeviceDisconnected = subBuilder;
            break;
          }
          case 82: {
            global::IntifaceCLI.ServerProcessMessage.Types.SimulatedDeviceMsgOut subBuilder = new global::IntifaceCLI.ServerProcessMessage.Types.SimulatedDeviceMsgOut();
            if (msgCase_ == MsgOneofCase.SimulatedDeviceMsgOut) {
              subBuilder.MergeFrom(SimulatedDeviceMsgOut);
            }
            input.ReadMessage(subBuilder);
            SimulatedDeviceMsgOut = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ServerProcessMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status messages from the server process
      /// </summary>
      public sealed partial class ProcessLog : pb::IMessage<ProcessLog> {
        private static readonly pb::MessageParser<ProcessLog> _parser = new pb::MessageParser<ProcessLog>(() => new ProcessLog());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ProcessLog> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::IntifaceCLI.ServerProcessMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessLog() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessLog(ProcessLog other) : this() {
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessLog Clone() {
          return new ProcessLog(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ProcessLog);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ProcessLog other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Message.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ProcessLog other) {
          if (other == null) {
            return;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Notifies frontend that server process is up and running
      /// </summary>
      public sealed partial class ProcessStarted : pb::IMessage<ProcessStarted> {
        private static readonly pb::MessageParser<ProcessStarted> _parser = new pb::MessageParser<ProcessStarted>(() => new ProcessStarted());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ProcessStarted> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::IntifaceCLI.ServerProcessMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessStarted() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessStarted(ProcessStarted other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessStarted Clone() {
          return new ProcessStarted(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ProcessStarted);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ProcessStarted other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ProcessStarted other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      /// <summary>
      /// Notifies frontend that the server process errored out
      /// </summary>
      public sealed partial class ProcessError : pb::IMessage<ProcessError> {
        private static readonly pb::MessageParser<ProcessError> _parser = new pb::MessageParser<ProcessError>(() => new ProcessError());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ProcessError> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::IntifaceCLI.ServerProcessMessage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessError() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessError(ProcessError other) : this() {
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessError Clone() {
          return new ProcessError(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ProcessError);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ProcessError other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Message.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ProcessError other) {
          if (other == null) {
            return;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Notifies frontend that server process has ended
      /// </summary>
      public sealed partial class ProcessEnded : pb::IMessage<ProcessEnded> {
        private static readonly pb::MessageParser<ProcessEnded> _parser = new pb::MessageParser<ProcessEnded>(() => new ProcessEnded());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ProcessEnded> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::IntifaceCLI.ServerProcessMessage.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessEnded() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessEnded(ProcessEnded other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessEnded Clone() {
          return new ProcessEnded(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ProcessEnded);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ProcessEnded other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ProcessEnded other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      /// <summary>
      /// Buttplug protocol log message from server process
      /// </summary>
      public sealed partial class ButtplugLog : pb::IMessage<ButtplugLog> {
        private static readonly pb::MessageParser<ButtplugLog> _parser = new pb::MessageParser<ButtplugLog>(() => new ButtplugLog());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ButtplugLog> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::IntifaceCLI.ServerProcessMessage.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ButtplugLog() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ButtplugLog(ButtplugLog other) : this() {
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ButtplugLog Clone() {
          return new ButtplugLog(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ButtplugLog);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ButtplugLog other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Message.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ButtplugLog other) {
          if (other == null) {
            return;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Notification that a client has connected to the server process
      /// </summary>
      public sealed partial class ClientConnected : pb::IMessage<ClientConnected> {
        private static readonly pb::MessageParser<ClientConnected> _parser = new pb::MessageParser<ClientConnected>(() => new ClientConnected());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientConnected> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::IntifaceCLI.ServerProcessMessage.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientConnected() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientConnected(ClientConnected other) : this() {
          clientName_ = other.clientName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientConnected Clone() {
          return new ClientConnected(this);
        }

        /// <summary>Field number for the "client_name" field.</summary>
        public const int ClientNameFieldNumber = 1;
        private string clientName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ClientName {
          get { return clientName_; }
          set {
            clientName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientConnected);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientConnected other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ClientName != other.ClientName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ClientName.Length != 0) hash ^= ClientName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ClientName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ClientName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ClientName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientConnected other) {
          if (other == null) {
            return;
          }
          if (other.ClientName.Length != 0) {
            ClientName = other.ClientName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ClientName = input.ReadString();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Notification that a client has disconnected from the server
      /// process.
      /// </summary>
      public sealed partial class ClientDisconnected : pb::IMessage<ClientDisconnected> {
        private static readonly pb::MessageParser<ClientDisconnected> _parser = new pb::MessageParser<ClientDisconnected>(() => new ClientDisconnected());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClientDisconnected> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::IntifaceCLI.ServerProcessMessage.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientDisconnected() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientDisconnected(ClientDisconnected other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClientDisconnected Clone() {
          return new ClientDisconnected(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ClientDisconnected);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClientDisconnected other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClientDisconnected other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      /// <summary>
      /// Notification that the server has connected to a device.
      /// </summary>
      public sealed partial class DeviceConnected : pb::IMessage<DeviceConnected> {
        private static readonly pb::MessageParser<DeviceConnected> _parser = new pb::MessageParser<DeviceConnected>(() => new DeviceConnected());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DeviceConnected> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::IntifaceCLI.ServerProcessMessage.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceConnected() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceConnected(DeviceConnected other) : this() {
          deviceName_ = other.deviceName_;
          deviceId_ = other.deviceId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceConnected Clone() {
          return new DeviceConnected(this);
        }

        /// <summary>Field number for the "device_name" field.</summary>
        public const int DeviceNameFieldNumber = 1;
        private string deviceName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeviceName {
          get { return deviceName_; }
          set {
            deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "device_id" field.</summary>
        public const int DeviceIdFieldNumber = 2;
        private uint deviceId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint DeviceId {
          get { return deviceId_; }
          set {
            deviceId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DeviceConnected);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DeviceConnected other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DeviceName != other.DeviceName) return false;
          if (DeviceId != other.DeviceId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
          if (DeviceId != 0) hash ^= DeviceId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (DeviceName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DeviceName);
          }
          if (DeviceId != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(DeviceId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DeviceName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
          }
          if (DeviceId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DeviceConnected other) {
          if (other == null) {
            return;
          }
          if (other.DeviceName.Length != 0) {
            DeviceName = other.DeviceName;
          }
          if (other.DeviceId != 0) {
            DeviceId = other.DeviceId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DeviceName = input.ReadString();
                break;
              }
              case 16: {
                DeviceId = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Notification that the server has disconnected from a device.
      /// </summary>
      public sealed partial class DeviceDisconnected : pb::IMessage<DeviceDisconnected> {
        private static readonly pb::MessageParser<DeviceDisconnected> _parser = new pb::MessageParser<DeviceDisconnected>(() => new DeviceDisconnected());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DeviceDisconnected> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::IntifaceCLI.ServerProcessMessage.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceDisconnected() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceDisconnected(DeviceDisconnected other) : this() {
          deviceId_ = other.deviceId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DeviceDisconnected Clone() {
          return new DeviceDisconnected(this);
        }

        /// <summary>Field number for the "device_id" field.</summary>
        public const int DeviceIdFieldNumber = 1;
        private uint deviceId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint DeviceId {
          get { return deviceId_; }
          set {
            deviceId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DeviceDisconnected);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DeviceDisconnected other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DeviceId != other.DeviceId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DeviceId != 0) hash ^= DeviceId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (DeviceId != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(DeviceId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DeviceId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DeviceDisconnected other) {
          if (other == null) {
            return;
          }
          if (other.DeviceId != 0) {
            DeviceId = other.DeviceId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                DeviceId = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class SimulatedDeviceMsgOut : pb::IMessage<SimulatedDeviceMsgOut> {
        private static readonly pb::MessageParser<SimulatedDeviceMsgOut> _parser = new pb::MessageParser<SimulatedDeviceMsgOut>(() => new SimulatedDeviceMsgOut());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SimulatedDeviceMsgOut> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::IntifaceCLI.ServerProcessMessage.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SimulatedDeviceMsgOut() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SimulatedDeviceMsgOut(SimulatedDeviceMsgOut other) : this() {
          deviceIdent_ = other.deviceIdent_;
          jsonMsg_ = other.jsonMsg_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SimulatedDeviceMsgOut Clone() {
          return new SimulatedDeviceMsgOut(this);
        }

        /// <summary>Field number for the "device_ident" field.</summary>
        public const int DeviceIdentFieldNumber = 1;
        private string deviceIdent_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeviceIdent {
          get { return deviceIdent_; }
          set {
            deviceIdent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "json_msg" field.</summary>
        public const int JsonMsgFieldNumber = 2;
        private string jsonMsg_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string JsonMsg {
          get { return jsonMsg_; }
          set {
            jsonMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SimulatedDeviceMsgOut);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SimulatedDeviceMsgOut other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DeviceIdent != other.DeviceIdent) return false;
          if (JsonMsg != other.JsonMsg) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DeviceIdent.Length != 0) hash ^= DeviceIdent.GetHashCode();
          if (JsonMsg.Length != 0) hash ^= JsonMsg.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (DeviceIdent.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DeviceIdent);
          }
          if (JsonMsg.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(JsonMsg);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DeviceIdent.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceIdent);
          }
          if (JsonMsg.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonMsg);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SimulatedDeviceMsgOut other) {
          if (other == null) {
            return;
          }
          if (other.DeviceIdent.Length != 0) {
            DeviceIdent = other.DeviceIdent;
          }
          if (other.JsonMsg.Length != 0) {
            JsonMsg = other.JsonMsg;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DeviceIdent = input.ReadString();
                break;
              }
              case 18: {
                JsonMsg = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
